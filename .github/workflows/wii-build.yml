name: Wii Build CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install devkitPro
      run: |
        sudo apt update
        sudo apt install -y wget curl build-essential gcc-multilib
        
        echo "Setting up minimal cross-compilation environment..."
        
        # Create devkitPro structure
        sudo mkdir -p /opt/devkitpro/devkitPPC/bin
        sudo mkdir -p /opt/devkitpro/libogc/include
        
        # Create simple wrapper script
        echo '#!/bin/bash' | sudo tee /opt/devkitpro/devkitPPC/bin/powerpc-eabi-gcc > /dev/null
        echo 'exec gcc -m32 "$@"' | sudo tee -a /opt/devkitpro/devkitPPC/bin/powerpc-eabi-gcc > /dev/null
        sudo chmod +x /opt/devkitpro/devkitPPC/bin/powerpc-eabi-gcc
        
        # Create tool symlinks
        cd /opt/devkitpro/devkitPPC/bin
        sudo ln -sf powerpc-eabi-gcc powerpc-eabi-g++
        sudo ln -sf /usr/bin/ar powerpc-eabi-ar
        sudo ln -sf /usr/bin/ranlib powerpc-eabi-ranlib
        sudo ln -sf /usr/bin/objcopy powerpc-eabi-objcopy
        sudo ln -sf /usr/bin/strip powerpc-eabi-strip
        
        # Create minimal header files
        echo '#ifndef __GCTYPES_H__' | sudo tee /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        echo '#define __GCTYPES_H__' | sudo tee -a /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        echo '#include <stdint.h>' | sudo tee -a /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        echo 'typedef uint8_t u8;' | sudo tee -a /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        echo 'typedef uint16_t u16;' | sudo tee -a /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        echo 'typedef uint32_t u32;' | sudo tee -a /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        echo 'typedef uint64_t u64;' | sudo tee -a /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        echo '#endif' | sudo tee -a /opt/devkitpro/libogc/include/gctypes.h > /dev/null
        
        # Create GRRLIB header
        echo '#ifndef __GRRLIB_H__' | sudo tee /opt/devkitpro/libogc/include/grrlib.h > /dev/null
        echo '#define __GRRLIB_H__' | sudo tee -a /opt/devkitpro/libogc/include/grrlib.h > /dev/null
        echo '#include "gctypes.h"' | sudo tee -a /opt/devkitpro/libogc/include/grrlib.h > /dev/null
        echo 'typedef struct GRRLIB_texImg GRRLIB_texImg;' | sudo tee -a /opt/devkitpro/libogc/include/grrlib.h > /dev/null
        echo 'static inline void GRRLIB_Rectangle(float x, float y, float w, float h, u32 c, int f) {}' | sudo tee -a /opt/devkitpro/libogc/include/grrlib.h > /dev/null
        echo '#endif' | sudo tee -a /opt/devkitpro/libogc/include/grrlib.h > /dev/null
        
        # Test installation
        if /opt/devkitpro/devkitPPC/bin/powerpc-eabi-gcc --version; then
          echo "Minimal devkitPPC environment ready"
        else
          echo "Setup failed"
          exit 1
        fi

    - name: Setup environment
      run: |
        echo "/opt/devkitpro/devkitPPC/bin" >> $GITHUB_PATH
        echo "/opt/devkitpro/tools/bin" >> $GITHUB_PATH
        echo "DEVKITPRO=/opt/devkitpro" >> $GITHUB_ENV
        echo "DEVKITPPC=/opt/devkitpro/devkitPPC" >> $GITHUB_ENV

    - name: Build with Make
      run: |
        make clean
        make -j$(nproc)

    - name: Create package
      run: make package

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WiingPong-build-${{ github.sha }}
        path: |
          WiingPong.elf
          WiingPong.dol
          apps/

    - name: Install cppcheck
      run: sudo apt-get update && sudo apt-get install -y cppcheck

    - name: Run static analysis (cppcheck)
      run: |
        cppcheck \
          --enable=all \
          --std=c++11 \
          --platform=unix32 \
          --suppress=missingIncludeSystem \
          --suppress=unusedFunction \
          --error-exitcode=0 \
          --quiet \
          source/
      continue-on-error: true