name: Wii Build CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install devkitPro
      run: |
        sudo apt update
        sudo apt install -y wget curl build-essential
        
        # Method 1: Try official installation script
        echo "Attempting official devkitPro installation..."
        if wget -q https://apt.devkitpro.org/install-devkitpro-pacman.sh -O install-devkitpro-pacman.sh; then
          if bash install-devkitpro-pacman.sh; then
            echo "Official installation succeeded"
            sudo dkp-pacman -Sy --noconfirm
            sudo dkp-pacman -S --noconfirm devkitPPC libogc grrlib
          else
            echo "Official script failed, trying Docker approach..."
            # Method 2: Use Docker to extract devkitPro
            sudo apt install -y docker.io
            sudo systemctl start docker
            
            # Pull devkitPro Docker image and extract tools
            sudo docker pull devkitpro/devkitppc:latest
            
            # Create container and copy devkitPro files
            sudo docker create --name devkit-temp devkitpro/devkitppc:latest
            sudo docker cp devkit-temp:/opt/devkitpro /opt/
            sudo docker rm devkit-temp
            
            # Set proper permissions
            sudo chown -R root:root /opt/devkitpro
            sudo chmod -R 755 /opt/devkitpro
            
            echo "Docker extraction completed"
          fi
        else
          echo "Could not download official script, using Docker method..."
          # Method 2: Docker approach (fallback)
          sudo apt install -y docker.io
          sudo systemctl start docker
          
          sudo docker pull devkitpro/devkitppc:latest
          sudo docker create --name devkit-temp devkitpro/devkitppc:latest
          sudo docker cp devkit-temp:/opt/devkitpro /opt/
          sudo docker rm devkit-temp
          sudo chown -R root:root /opt/devkitpro
          sudo chmod -R 755 /opt/devkitpro
          
          echo "Docker installation completed"
        fi
        
        # Verify installation
        if [ -d "/opt/devkitpro/devkitPPC" ]; then
          echo "devkitPPC installation verified"
        else
          echo "devkitPPC installation failed"
          exit 1
        fi

    - name: Setup environment
      run: |
        echo "/opt/devkitpro/devkitPPC/bin" >> $GITHUB_PATH
        echo "/opt/devkitpro/tools/bin" >> $GITHUB_PATH
        echo "DEVKITPRO=/opt/devkitpro" >> $GITHUB_ENV
        echo "DEVKITPPC=/opt/devkitpro/devkitPPC" >> $GITHUB_ENV

    - name: Build with Make
      run: |
        make clean
        make -j$(nproc)

    - name: Create package
      run: make package

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WiingPong-build-${{ github.sha }}
        path: |
          WiingPong.elf
          WiingPong.dol
          apps/

    - name: Install cppcheck
      run: sudo apt-get update && sudo apt-get install -y cppcheck

    - name: Run static analysis (cppcheck)
      run: |
        cppcheck \
          --enable=all \
          --std=c++11 \
          --platform=unix32 \
          --suppress=missingIncludeSystem \
          --suppress=unusedFunction \
          --error-exitcode=0 \
          --quiet \
          source/
      continue-on-error: true