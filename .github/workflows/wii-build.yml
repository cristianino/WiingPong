name: Wii Build CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install devkitPro
      run: |
        sudo apt update
        sudo apt install -y wget curl build-essential
        
        # Use a working devkitPro installation method
        # First, let's check what releases are actually available
        echo "Checking available devkitPro pacman releases..."
        curl -s https://api.github.com/repos/devkitPro/pacman/releases/latest | grep "browser_download_url.*\.deb" | head -5
        
        # Try the most common working versions
        VERSIONS=("6.0.1" "6.0.0" "1.0.2" "1.0.1" "1.0.0")
        INSTALLED=false
        
        for version in "${VERSIONS[@]}"; do
          echo "Trying version $version..."
          
          # Try different URL patterns
          for pattern in "devkitpro-pacman_${version}_amd64.deb" "devkitpro-pacman_${version}-1_amd64.deb" "devkitpro-pacman_${version}-2_amd64.deb"; do
            url="https://github.com/devkitPro/pacman/releases/download/v${version}/${pattern}"
            echo "Attempting download: $url"
            
            if curl -L --fail "$url" -o devkitpro-pacman.deb; then
              # Verify the download is valid
              if [ -f devkitpro-pacman.deb ] && [ -s devkitpro-pacman.deb ] && file devkitpro-pacman.deb | grep -q "Debian"; then
                echo "Successfully downloaded $pattern"
                sudo dpkg -i devkitpro-pacman.deb && INSTALLED=true && break 2
              else
                echo "Downloaded file is not a valid .deb package"
                rm -f devkitpro-pacman.deb
              fi
            fi
          done
        done
        
        # If all versions failed, try manual installation
        if [ "$INSTALLED" = false ]; then
          echo "All package installations failed, trying manual setup..."
          
          # Create basic pacman structure
          sudo mkdir -p /opt/devkitpro/pacman/bin
          
          # Download and install devkitPPC manually from known working source
          wget -q https://wii.leseratte10.de/devkitPro/devkitPPC_r39-3_amd64.deb -O devkitppc.deb || {
            echo "Manual installation also failed, exiting..."
            exit 1
          }
          
          sudo dpkg -i devkitppc.deb || sudo apt-get install -f -y
          
          # Set up environment manually
          export DEVKITPRO=/opt/devkitpro
          export DEVKITPPC=/opt/devkitpro/devkitPPC
          echo "Manual installation completed"
        else
          # Verify pacman installation and install packages
          which dkp-pacman || { echo "dkp-pacman not found after installation"; exit 1; }
          sudo dkp-pacman -Sy --noconfirm
          sudo dkp-pacman -S --noconfirm devkitPPC libogc grrlib
        fi

    - name: Setup environment
      run: |
        echo "/opt/devkitpro/devkitPPC/bin" >> $GITHUB_PATH
        echo "/opt/devkitpro/tools/bin" >> $GITHUB_PATH
        echo "DEVKITPRO=/opt/devkitpro" >> $GITHUB_ENV
        echo "DEVKITPPC=/opt/devkitpro/devkitPPC" >> $GITHUB_ENV

    - name: Build with Make
      run: |
        make clean
        make -j$(nproc)

    - name: Create package
      run: make package

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WiingPong-build-${{ github.sha }}
        path: |
          WiingPong.elf
          WiingPong.dol
          apps/

    - name: Install cppcheck
      run: sudo apt-get update && sudo apt-get install -y cppcheck

    - name: Run static analysis (cppcheck)
      run: |
        cppcheck \
          --enable=all \
          --std=c++11 \
          --platform=unix32 \
          --suppress=missingIncludeSystem \
          --suppress=unusedFunction \
          --error-exitcode=0 \
          --quiet \
          source/
      continue-on-error: true